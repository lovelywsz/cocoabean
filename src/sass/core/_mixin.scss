/*处理1px border*/
@mixin border($bdv,$w,$s,$c){
  #{$bdv}: $w $s $c;
  @at-root .iosx2 &{
	   #{$bdv}: $w/2 $s $c;
  }
  @at-root .iosx3 &{
	   #{$bdv}: $w/2.8 $s $c;
  }
}
//flex
@mixin flexContent($direction:row,$wrap:nowrap,$justifyContent:flex-start,$alignItems: stretch){
  display: -webkit-box;
  display: -webkit-flex;
  display: flex;
  /*主轴方向*/
  flex-direction: $direction;
  /*换行*/
  flex-wrap: $wrap;
  /*flex-flow属性是flex-direction和flex-wrap的简写形式，默认值为row nowrap*/
  
  /*项目在主轴上的对齐方式*/
  -webkit-justify-content: $justifyContent;
  justify-content: $justifyContent;
  /*项目在交叉轴上如何对齐*/
  -webkit-align-items: $alignItems;
  align-items: $alignItems;
}
@mixin flexItem{
  -webkit-box-flex: 1;
  -webkit-flex: 1;
  flex: 1;
  width: 0%;
}
@mixin flexItem($itemFlex:1,$itemWidth:0%){
  -webkit-box-flex: $itemFlex;
  -webkit-flex: $itemFlex;
  flex: $itemFlex;
  width: $itemWidth;
}

//textEllipsis
%textEllipsis{
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

//Absolute Position
@mixin abs-pos ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  top: $top;
  right: $right;
  bottom: $bottom;
  left: $left;
  position: absolute;
}

.abs {
  @include abs-pos(10px, 10px, 5px, 15px);
}

//Clearfix
@mixin clearfix() {
	&:before,
	&:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
}

.container {
  @include clearfix();
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
	@content;
  }
}

.foo {
  @include when-inside('.active') {
	animation: fadeIn 0.3s 1s forwards;
  }
}

//方便的媒体查询
$breakpoints: (
  'sm': 'only screen and  (min-width: 480px)',
  'md': 'only screen and ( min-width: 768px)',
  'lg': 'only screen and ( min-width: 992px)'
) !default;


@mixin respond-to($breakpoint) {
  $query: map-get($breakpoints, $breakpoint);
  
  @if not $query {
	@error 'No value found for `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.';
  }

  @media #{if(type-of($query) == 'string', unquote($query), inspect($query))} {
	@content;
  }
}

.foo {
  @include respond-to('sm') {
	padding-left: 20px;
	padding-right: 20px;
  }
}